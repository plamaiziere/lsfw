--- probe ---

probe|probe6 [ProbeOptions] source destination
[tcp | udp [portsource:][portdest] [flags tcpflags [tcpflags]]] |
[icmp [icmptype]] |
[icmp6 [icmp6type]] |
[protocol]

  The probe command probes the network from a source IP address to a destination IP
address. Optionally, the protocol and dependent options can be specified.

ProbeOptions
-------------
  Several options can be specified for the probe:

 on equipment-spec     : specification of the equipment to start the probing.
 expect expected-result: specify the expected result of the probing.
 learn                 : display a short summary of the result of the probing.
 no-action             : do not make any probe transformation or action while
                            probing.
 verbose               : verbose reports.
 match                 : display matching access list. This is the default.
 active                : display active access lists.

on equipment-spec
------------------
  The 'on' keyword allows to specify one interface on a network equipement
where the probe will be injected. The equipment specification specifies the
name of the equipment, optionally followed by a '|' and the name of an
interface or an IP address:

 equipments-spec: equipment['|'(interface-name | ip address)].

  If only the equipment is specified, lsfw tries to find a link on this equipment.

  If an interface name is specified, lsfw uses the first link available on this
interface, regardless of the source IP address of the probe (a link describes
one network connected to an interface).

  If an IP address is specified, lsfw uses this IP address to find the link,
regardless of the source IP address of the probe.

  If the DFLTEQUIPMENT variable is defined, lsfw uses this variable as a default
equipment specification when no candidate link is found for IPv4 addresses.

  If the DFLTEQUIPMENT6 variable is defined, lsfw uses this variable as a default
equipment specification when no candidate link is found for IPv6 addresses.

expect expected-result
----------------------
  In test mode, the keyword 'expect' specifies the expected result of the probe
command. The expected result can be one of the following values:

 routed
True if all the probes reach their destination address (or a border link).

 none-routed
True if all the probes don't reach their destination address.

 accept
True if all the probes are accepted by filtering rule, implies 'routed'.

 deny
True if all the probes are denied by filtering rule, implies 'routed'.

 may
True if some probes are not routed to their destination, or if some filtering
rules are ambiguous.

The test can be negated by using a '!' before the expected result (ex: !routed)

no-action
---------
  If no-action is set, an equipment must not do any action on the probe like
transformation or routing.

Addresses
---------
  Source and destination addresses can be a hostname, an IP address or a
network. If a hostname is specified, it is resolved using DNS. The probe command
uses IPv4 resolution and the probe6 command uses IPv6 resolution.

  By default, lsfw tries to find a network equipment where the probe will be
injected using the source IP address of the probe. If there is zero or more than
one candidate, lsfw rejects the command with an error.

  The "=host/mask" notation in the source address of the probe specifies to
use the host address (instead the network address) when looking for the
equipment where the probe will be injected.

Protocol
--------
  The protocol is specified using a number or the name of the protocol.
Names are resolved using an internal database.

udp/tcp
-------
  If the protocol is udp or tcp, port source and port destination can be specified
using the form [portsource:][portdest]

  Port can be a number, the name of a service or one of the keywords "any,
  none, known, reg, dyn". Services are resolved using an internal services database.

  The following keywords can be used instead of a service name:
    none : a "none" port which never match.
    any  : a "any" port which always match. This is the default.
    known: a "well known" port between 0..1023.
    reg  : a "registered" port between 1024..49151.
    dyn  : a "dynamic" port between 49152..65535.

tcp
---
  If the protocol is tcp, several tcp flags can be specified using the form
flags tcpflags [tcpflags]. If several tcpflags are specified, the probe matches
if at least one tcpflags matches.

tcpFlags can be a combinaison of flags, the keyword 'any' or the keyword 'none'.
'none' designates a tcpflags with all flags unset.
'any' matches all tcpflags, and is the default when flags are unspecified.

A TCP flag is specified using a letter in uppercase or lowercase. A flag in
uppercase specifies that the flag is set, in lowercase the flag is unset.

TCP flags:
 W: CWR
 E: ECE
 U: URG
 A: ACK
 P: PSH
 R: RST
 S: SYN
 F: FIN

icmp/icmp6
-----------
  If the protocol is icmp or icmp6, the icmp-type or icmp message can be added.

  Icmp-type/icmp6-type can be a number or the name of an icmp-type or icmp
message. Names are resolved using an internal database.

Examples:
---------

  Probe from 192.168.1.2 to google, no protocol specification
  lsfw> probe 192.168.1.2 www.google.com

  Probe from the network 192.168.1.2/24 to google, no protocol specification
  lsfw> probe 192.168.1.2/24 www.google.com

  Same for tcp and http for the destination port.
  lsfw> probe 192.168.1.2/24 www.google.com tcp http

  Port source http
  lsfw> probe 192.168.1.2/24 www.google.com tcp http:

  Port source and port dest
  lsfw> probe 192.168.1.2/24 www.google.com tcp 1024:http

  Port source and port dest, using a dynamic port for the source port
  lsfw> probe 192.168.1.2/24 www.google.com tcp dyn:http

  Icmp echo
  lsfw> probe 192.168.1.2/24 1.2.3.4 icmp echo

  Probe from the equipment "router1", interface 'if0' using an equipment
  specification
  lsfw> probe on router1|if0 192.168.1.2/24 1.2.3.4 icmp echo

  Probe from "www.afnic.fr" (IpV4), applying a netmask.
  lsfw> probe www.afnic.fr/16 1.2.3.4

  Probe from "www.afnic.fr" (IpV6), applying a netmask.
  lsfw> probe6 www.afnic.fr/16 ::1

  Probe from 192.168.1.2/24, but use the host address 192.168.1.2 to find the
  equipment where the probe should be injected (instead using the network
  192.168.1.0/24).
  lsfw> probe =192.168.1.2/24 1.2.3.4

  Probe with tcp flag SYN set.
  lsfw> probe 192.168.1.2/24 www.google.com tcp flags S

  Probe with tcp flags SYN set and ACK unset.
  lsfw> probe 192.168.1.2/24 www.google.com tcp http flags Sa

